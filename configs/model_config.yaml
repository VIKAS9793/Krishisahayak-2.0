# KrishiSahayak 2.0 - Model Configuration
# Version: 2.1-wip
# Last Updated: 2025-06-26

# =============== Model Metadata ===============
model:
  name: "krishisahayak-plant-disease-classifier"
  version: "2.1.0"
  framework: "PyTorch 2.0.1"
  task: "multi-class image classification"
  description: "Plant disease classifier for common agricultural crops"
  license: "MIT"
  maintainers: ["Vikas Sahani <vikassahani17@gmail.com>"]
  repo: "https://github.com/VIKAS9793/Krishisahayak-2.0"

# =============== Architecture ===============
architecture:
  type: "UnifiedModel"
  backbone: "efficientnet_b3"  # From timm
  pretrained: true
  num_classes: 38  # Number of disease classes
  input_size: [224, 224]  # H, W
  in_chans: 3  # RGB input channels
  drop_rate: 0.2
  drop_path_rate: 0.1
  global_pool: "avg"

# =============== Training Configuration ===============
training:
  dataset: "PlantVillage"
  dataset_version: "1.0.0"
  train_split: 0.7
  val_split: 0.15
  test_split: 0.15
  batch_size: 32
  epochs: 100
  optimizer: "AdamW"
  learning_rate: 3e-4
  weight_decay: 0.05
  lr_scheduler: "CosineAnnealingLR"
  warmup_epochs: 5
  label_smoothing: 0.1
  mixup_alpha: 0.2
  cutmix_alpha: 1.0
  auto_augment: "rand-m9-mstd0.5-inc1"

# =============== Data Augmentation ===============
augmentation:
  train:
    - name: "RandomResizedCrop"
      size: [224, 224]
      scale: [0.08, 1.0]
      ratio: [0.75, 1.33]
    - name: "RandomHorizontalFlip"
      p: 0.5
    - name: "ColorJitter"
      brightness: 0.4
      contrast: 0.4
      saturation: 0.4
      hue: 0.1
    - name: "Normalize"
      mean: [0.485, 0.456, 0.406]  # ImageNet stats
      std: [0.229, 0.224, 0.225]
  
  val:
    - name: "Resize"
      size: [256, 256]
    - name: "CenterCrop"
      size: [224, 224]
    - name: "Normalize"
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]

# =============== Model Performance ===============
performance:
  metrics:
    - name: "accuracy"
      value: 0.0  # To be updated after training
      higher_is_better: true
    - name: "f1_score"
      value: 0.0  # To be updated after training
      higher_is_better: true
    - name: "precision"
      value: 0.0  # To be updated after training
      higher_is_better: true
    - name: "recall"
      value: 0.0  # To be updated after training
      higher_is_better: true
  
  inference_time:
    cpu_ms: 0.0  # To be updated after benchmarking
    gpu_ms: 0.0  # To be updated after benchmarking
  
  hardware_requirements:
    min_ram_gb: 4
    min_vram_gb: 2  # For GPU inference
    recommended_ram_gb: 8
    recommended_vram_gb: 4

# =============== Deployment Configuration ===============
deployment:
  framework: "TorchScript"
  precision: "fp16"  # Options: fp32, fp16, int8
  quantization: false
  onnx_export: true
  tensorrt_support: false
  
  serving:
    max_batch_size: 32
    max_wait_time_ms: 1000
    input_shape: [1, 3, 224, 224]  # BCHW
    output_shape: [1, 38]  # Number of classes
  
  resources:
    cpu_cores: 2
    memory_mb: 2048
    gpu_count: 0  # 0 for CPU-only

# =============== Model Monitoring ===============
monitoring:
  enabled: true
  metrics:
    - name: "prediction_confidence"
      threshold: 0.6  # Below this triggers low-confidence warning
    - name: "inference_latency_ms"
      warning_threshold: 500
      critical_threshold: 1000
    - name: "error_rate"
      warning_threshold: 0.05  # 5%
      critical_threshold: 0.1  # 10%
  
  logging:
    level: "INFO"
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    file: "logs/model_serving.log"

# =============== Model Cards and Documentation ===============
documentation:
  model_card: "docs/MODEL_CARD.md"
  limitations: "docs/LIMITATIONS.md"
  architecture: "docs/ARCHITECTURE.md"
  examples: "docs/examples/"
  
# =============== Version Control ===============
version_control:
  git_commit: ""  # To be filled during build
  docker_image: "krishisahayak/model:2.1.0"
  model_checksum: ""  # To be filled after model export
  data_checksum: ""  # Checksum of training data

# =============== Maintenance ===============
maintenance:
  last_trained: "2025-06-26"
  next_retraining: "2025-12-31"
  expected_lifetime: "2 years"
  deprecation_policy: "6 months notice"
  
# =============== License and Compliance ===============
license:
  type: "MIT"
  copyright: "Â© 2025 KrishiSahayak"
  restrictions: "See LICENSE file for details"

compliance:
  data_privacy: "GDPR compliant"
  export_control: "EAR99"
  ethical_ai: true
  responsible_ai: "Follows Microsoft Responsible AI guidelines"
