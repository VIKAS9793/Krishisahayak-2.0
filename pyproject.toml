[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
# Specifies that our installable package code is in the 'src' directory.
where = ["src"]
include = ["krishi_sahayak*"]
namespaces = false

[project]
name = "krishi-sahayak"
# REFACTORED: Version is now sourced dynamically from the package's __init__.py
dynamic = ["version"]
authors = [
    {name = "Vikas Sahani", email = "vikassahani17@gmail.com"},
]
description = "AI-Powered Crop Health Assistant for farmers."
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    # Core ML & Data Stack
    "torch>=2.0.0", "torchvision>=0.15.0", "pytorch-lightning>=2.0.0",
    "timm>=0.6.0", "numpy>=1.22.0", "pandas>=1.3.0", "scikit-learn>=1.0.0",
    "Pillow>=9.0.0", "opencv-python-headless>=4.5.0", "PyYAML>=5.4.1", "tqdm>=4.60.0",
    # Configuration
    "pydantic>=2.0.0",
    # Visualization, UI & Logging
    "matplotlib>=3.5.0", "seaborn>=0.11.0", "gradio>=3.0.0", "colorlog>=6.0.0",
    "wandb>=0.15.0", "tensorboard>=2.12.0",
    # Image Augmentation
    "albumentations>=1.4.0",
]

[project.urls]
"Homepage" = "https://github.com/VIKAS9793/Krishisahayak-2.0"
"Repository" = "https://github.com/VIKAS9793/Krishisahayak-2.0"
"Bug Tracker" = "https://github.com/VIKAS9793/Krishisahayak-2.0/issues"

[project.scripts]
# Defines installable command-line entry points.
krishi-train = "krishi_sahayak.scripts.run_training:main"
krishi-infer = "krishi_sahayak.scripts.run_inference:main"
krishi-analyze = "krishisahayak.scripts.analyze_dataset:main"

[project.optional-dependencies]
# Dependencies for development, testing, API, and deployment.
dev = ["black>=24.0", "ruff>=0.4", "mypy>=1.9", "pre-commit", "pip-tools", "pip-audit>=2.7.0"]
test = ["pytest>=7.4", "pytest-mock>=3.10.0", "pytest-cov>=3.0.0"]
api = ["fastapi>=0.110.0", "uvicorn[standard]>=0.29.0", "gunicorn>=22.0.0", "python-multipart>=0.0.9", "pydantic-settings>=2.2.0"]
deploy = ["onnx>=1.16", "onnxruntime>=1.18", "tensorflow>=2.16", "onnx-tf>=1.10"]

# --- Tool Configurations ---
[tool.setuptools.dynamic]
# Specifies where to find the dynamic version string.
version = {attr = "krishi_sahayak.__version__"}

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "W", "F", "I", "C4", "UP", "N", "B", "A", "C90", "T20", "FBT", "RUF"]
ignore = ["E501", "B008", "C901"]

[tool.ruff.isort]
known-first-party = ["krishi_sahayak"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --cov=krishi_sahayak --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["krishisahayak"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
# ... other strict mypy settings ...
[[tool.mypy.overrides]]
module = ["torch", "torchvision", "pytorch_lightning", "matplotlib.*", "seaborn.*", "gradio.*", "wandb.*", "albumentations.*", "tqdm.*", "pandas.*", "timm.*", "numpy.*"]
ignore_missing_imports = true
